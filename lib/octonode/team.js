// Generated by CoffeeScript 1.8.0
(function() {
  var Team,
    __slice = [].slice;

  Team = (function() {
    function Team(id, client) {
      this.id = id;
      this.client = client;
    }

    Team.prototype.info = function(cb) {
      return this.client.get("/teams/" + this.id, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error('Team info error'));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Team.prototype.members = function(cb) {
      return this.client.get("/teams/" + this.id + "/members", function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error('Team members error'));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Team.prototype.member = function(user, cb) {
      return this.client.get("/teams/" + this.id + "/members/" + user, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        return cb(null, s === 204, h);
      });
    };

    Team.prototype.addUser = function(user, cb) {
      return this.client.put("/teams/" + this.id + "/members/" + user, null, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        return cb(null, s === 204, h);
      });
    };

    Team.prototype.removeUser = function(user, cb) {
      return this.client.del("/teams/" + this.id + "/members/" + user, null, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        return cb(null, s === 204, h);
      });
    };

    Team.prototype.repos = function() {
      var cb, params, _i, _ref;
      params = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), cb = arguments[_i++];
      return (_ref = this.client).get.apply(_ref, ["/teams/" + this.id + "/repos"].concat(__slice.call(params), [function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Team repos error"));
        } else {
          return cb(null, b, h);
        }
      }]));
    };

    return Team;

  })();

  module.exports = Team;

}).call(this);
